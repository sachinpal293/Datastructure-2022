// 1. Reverse array with two pointer
public static void rev(int[] arr, int start, int end)
 {
        if(start>end) return;
        
       int  temp = arr[start];
       arr[start] = arr[end];
       arr[end] = temp;
       
       rev(arr,start+1,end-1);
  }

//2. Reverse Array with single pointer

 public static void revwithSingle(int[] arr, int start)
  {
        if(start>=arr.length/2) return;
        
       int  temp = arr[start];
       arr[start] = arr[arr.length-start-1];
       arr[arr.length-start-1] = temp;
       
       revwithSingle(arr,start+1);
  }


//3. Print the all subsequence
        
public static void printSub(int indx, ArrayList<Integer> list, int[] arr, int n)
    {
        if(indx>=n)
        {
            for(int i : list)
            {
                System.out.print(i+" ");
            }
            if(list.size()==0)
            {
                System.out.println("[]");
            }
            System.out.println();
            return;
        }
        
        list.add(arr[indx]);
        printSub(indx+1,list,arr,n);
        list.remove(list.size()-1);
        printSub(indx+1, list, arr, n);
    }


// 4. print the all subsequence which sum is equal to the give sum

 public static void printSub(int indx, ArrayList<Integer> list, int[] arr, int n, int s,int sum)
    {
        if(indx>=n)
        {
            if(s==sum)
            {
            for(int i : list)
            {
                System.out.print(i+" ");
            }
                System.out.println();
            }
            return;
        }
        
        list.add(arr[indx]);
        s += arr[indx];
        printSub(indx+1,list,arr,n,s, sum);
        s -=arr[indx];
        list.remove(list.size()-1);
        printSub(indx+1, list, arr, n,s,sum);
    }
    
// 5. Print the subsequnce sum is equal to the given sum

public static boolean printSub(int indx, ArrayList<Integer> list, int[] arr, int n, int s,int sum)
    {
        if(indx>=n)
        {
            if(s==sum)
            {
            for(int i : list)
            {
                System.out.print(i+" ");
            }
                System.out.println();
                return true;
            }
            return false;
        }
        
        list.add(arr[indx]);
        s += arr[indx];
        if(printSub(indx+1,list,arr,n,s, sum)==true)
        {
            return true;
        }
        s -=arr[indx];
        list.remove(list.size()-1);
        if(printSub(indx+1, list, arr, n,s,sum)==true)
        {
            return true;
        }
        
        return false;
    }

//6. print the count of subsequence which is equal to the sum
public static int printSub(int indx, int[] arr, int n, int s,int sum)
    {
        if(indx>=n)
        {
            if(s==sum)
            {
               return 1;
            }
            return 0;
        }
        
        s += arr[indx];
        int l = printSub(indx+1,arr,n,s, sum);

        s -=arr[indx];
        int r = printSub(indx+1, arr, n,s,sum);
        
        return l+r;
    }
